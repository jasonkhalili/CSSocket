"use strict";

var _objectWithoutProperties = function (obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; };

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

module.exports = function (React) {

  var ClassGenerator = require("../mixins/classGenerator.js")(React);
  var StateSelector = require("../mixins/stateSelector.js")(React);
  var Unit = require("../commons/unit.js")(React);

  var defaultClassName = "ui input";

  var Input = React.createClass({
    displayName: "Input",

    mixins: [ClassGenerator, StateSelector],

    render: function render() {
      var _props = this.props;
      var className = _props.className;

      var other = _objectWithoutProperties(_props, ["className"]);

      if (typeof this.props.children != "undefined") {
        return React.createElement(
          Unit,
          _extends({}, other, {
            className: this.getClassName(defaultClassName),
            type: "div",
            color: "null",
            loading: this.getLoading(),
            focus: this.getFocus(),
            error: this.getError() }),
          this.props.children
        );
      } else {
        return React.createElement(
          Unit,
          {
            className: this.getClassName(defaultClassName),
            type: "div",
            color: "null",
            loading: this.getLoading(),
            focus: this.getFocus(),
            error: this.getError() },
          React.createElement("input", _extends({}, other, {
            placeholder: this.props.placeholder,
            type: this.props.type }))
        );
      }
    }
  });

  return Input;
};